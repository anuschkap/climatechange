table(ess20sel$testic41)
table(ess20sel$testic40)
table(ess20sel$testic37)
attributes(ess2020$testic33)
attributes(ess2020$admrclc)
table(ess20sel$testic41, useNA = "always")
table(ess20sel$testic40, useNA = "always")
table(ess20sel$testic37, useNA = "always")
table(ess20sel$ccnthum, useNA = "always")
table(ess20sel$ccrdprs, useNA = "always")
table(ess20sel$wrclmch, useNA = "always")
ess20sel <- ess2020 %>% filter(cntry=="NL")  %>%
select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight, ccnthum, ccrdprs, wrclmch, marsts, eisced, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvtfnl, lrscale, cntry)
ess20sel <- ess2020 %>% filter(cntry=="NL")  %>%
select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight, ccnthum, ccrdprs, wrclmch, marsts, eisced, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvthnl, lrscale)
View(ess20sel)
table(ess20sel$ccrdprs, useNA = "always")
ess20sel$ccrdprsn <- as.numeric(ess20sel$ccrdprs)
ess20sel$ccrdprsn_cat <- NA
ess20sel$ccrdprsn_cat[ess20sel$ccrdprsn >= 0 & ess20sel$ccrdprsn <= 2] <- 1
ess20sel$ccrdprsn_cat[ess20sel$ccrdprsn ==3 | ess20sel$ccrdprsn ==4] <- 2
ess20sel$ccrdprsn_cat[ess20sel$ccrdprsn ==5 | ess20sel$ccrdprsn ==6] <- 3
ess20sel$ccrdprsn_cat[ess20sel$ccrdprsn ==7 | ess20sel$ccrdprsn ==8] <- 4
ess20sel$ccrdprsn_cat[ess20sel$ccrdprsn ==9 | ess20sel$ccrdprsn ==10] <- 5
table(ess20sel$ccrdprsn_cat, useNA = "always")
table(ess20sel$ccrdprsn, useNA = "always")
table(ess20sel$edlvenl, useNA = "always")
ess16sel$edlvenl[ess16sel$edlvenl==5555] <- NA
table(ess20sel$edlvenl, useNA = "always")
ess20sel$edlvenl[ess20sel$edlvenl==5555] <- NA
table(ess20sel$edlvenl, useNA = "always")
table(ess20sel$eduyrs, useNA = "always")
table(ess20sel$gndr, useNA = "always")
table(ess20sel$eisced, useNA = "always")
ess20sel$eisced[ess20sel$eisced==55] <- NA
table(ess20sel$eisced, useNA = "always")
table(ess20sel$lrscale, useNA = "always")
list_na2- <- colnames(ess20sel)[ apply(ess20sel, 2, anyNA) ]
list_na2 <- colnames(ess20sel)[ apply(ess20sel, 2, anyNA) ]
list_na2
average_missing2 <- apply(ess20sel[,colnames(ess20sel) %in% list_na2],
2,
mean,
na.rm =  TRUE)
average_missing2
ess20sel_replace <- ess20sel %>%
mutate(eisced_mis  = ifelse(is.na(eisced), average_missing2[5], eisced),
edlvenl_mis = ifelse(is.na(edlvenl), average_missing2[7], edlvenl),
eduyrs_mis = ifelse(is.na(eduyrs), average_missing2[8], eduyrs),
lr_mis = ifelse(is.na(lrscale), average_missing2[13], lrscale),
age_mis = ifelse(is.na(agea), average_missing2[10], agea))
table(ess20sel_replace$eisced_mis, useNA = "always")
table(ess20sel_replace$edlvenl_mis, useNA = "always")
save(ess20sel, file="/Users/anuschka/Documents/climatechange/climatechange/ess20sel.Rdata")
save(ess16sel_replace, file="/Users/anuschka/Documents/climatechange/climatechange/ess16sel_mis.Rdata")
save(ess20sel_replace, file="/Users/anuschka/Documents/climatechange/climatechange/ess20sel_mis.Rdata")
table(ess20sel_replace$ccnthum, useNA = "always")
table(ess20sel$ccnthum, useNA = "always")
table(ess20sel$ccrdprs, useNA = "always")
table(ess20sel$wrclmch, useNA = "always")
ess_total <- merge(ess16sel_replace, ess20sel_replace, all = TRUE, by = "idno")
head(ess_total)
ess_total <- reshape(ess_total, timevar = "essround", idvar = "idno", direction = "long")
?reshapeLong
?reshape
ess_total <- reshape(ess_total, timevar = "essround", idvar = "idno", direction = "long", varying = 1:ncol(ess_total))
View(ess_total)
ess_total <- merge(ess16sel_replace, ess20sel_replace, all.x = TRUE, by = "idno")
head(ess_total)
head(ess_total)
View(ess_total)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
View(ess20sel_replace)
ess20sel_replace$agea <- ess20sel_replace$age_mis
ess16sel_replace <- ess16sel_replace %>% select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight, ccnthum, ccrdprs, wrclmch, marsts, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvtfnl, lrscale, ccrdprsn_cat, eisced_mis, edlvenl_mis, eduyrs_mis, lr_mis)
ess20sel_replace <- ess20sel_replace %>% select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight, ccnthum, ccrdprs, wrclmch, marsts, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvttnl, lrscale, ccrdprsn_cat, eisced_mis, edlvenl_mis, eduyrs_mis, lr_mis)
ess20sel_replace <- ess20sel_replace %>% select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight, ccnthum, ccrdprs, wrclmch, marsts, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvthnl, lrscale, ccrdprsn_cat, eisced_mis, edlvenl_mis, eduyrs_mis, lr_mis)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
rename(ess20sel_replace, prtvtfnl=prtvthnl)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
View(ess16sel_replace)
View(ess20sel_replace)
rename(ess20sel_replace, prtvtfnl=prtvthnl)
rename(ess20sel_replace, prtvtfnl = prtvthnl)
rename(ess20sel_replace, prtvthnl = prtvtfnl)
rename(ess20sel_replace, prtvtfnl = prtvthnl)
ess20sel_replace <- rename(ess20sel_replace, prtvtfnl = prtvthnl)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
remove_var_label(ess16sel_replace, ess20sel_replace)
remove_var_label(ess16sel_replace)
remove_var_label(ess20sel_replace)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
remove_val_label(ess16sel_replace)
remove_val_label(ess16sel_replace)
sapply(ess16sel_replace, haven::as_factor)
sapply(ess20sel_replace, haven::as_factor)
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
View(ess16sel_replace)
save(ess20sel_replace, file="/Users/anuschka/Documents/climatechange/climatechange/ess20sel_mis.Rdata")
save(ess16sel_replace, file="/Users/anuschka/Documents/climatechange/climatechange/ess16sel_mis.Rdata")
ess_total <- rbind(ess16sel_replace, ess20sel_replace)
issp1993 <- foreign::read.spss("/Users/anuschka/Documents/gesis_dir/issp/issp1993.sav", use.value.labels = T,  to.data.frame = T)
issp2010 <- foreign::read.spss("/Users/anuschka/Documents/gesis_dir/issp/issp2010.sav", use.value.labels = T, to.data.frame = T)
View(issp1993)
View(issp2010)
View(issp1993)
issp1993 <- issp1993 %>%
select(V9, V10 )
issp2010 <- issp2010 %>%
select(v20, v21)
issp2010 <- rename(issp2010, V9 = v20, V10 = v21)
issptot <- rbind(issp1993, issp2010)
View(issptot)
rm(list = ls())
ess2016 <- foreign::read.spss("/Users/anuschka/Documents/gesis_dir/ess/ESS8e02_2.sav", use.value.labels = T,  to.data.frame = T)
ess16sel <- ess2016 %>% filter(cntry=="NL")  %>%
select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight,ccnthum, ccrdprs, wrclmch, marsts, eisced, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvtfnl, lrscale)
View(ess16sel)
View(ess2016)
ess16sel <- ess2016 %>% filter(cntry=="The Netherlands")  %>%
select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight,ccnthum, ccrdprs, wrclmch, marsts, eisced, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvtfnl, lrscale)
ess16sel <- ess2016 %>% filter(cntry=="Netherlands")  %>%
select(name, essround, proddate, idno, dweight, pspwght, pweight, anweight,ccnthum, ccrdprs, wrclmch, marsts, eisced, edulvlb, edlvenl, eduyrs, mainact, gndr, agea, yrbrn, prtvtfnl, lrscale)
ess16sel$ccrdprsn <- as.numeric(ess16sel$ccrdprs)
ess16sel$ccrdprsn_cat <- NA
ess16sel$ccrdprsn_cat[ess16sel$ccrdprsn >= 0 & ess16sel$ccrdprsn <= 2] <- 1
ess16sel$ccrdprsn_cat[ess16sel$ccrdprsn ==3 | ess16sel$ccrdprsn ==4] <- 2
ess16sel$ccrdprsn_cat[ess16sel$ccrdprsn ==5 | ess16sel$ccrdprsn ==6] <- 3
ess16sel$ccrdprsn_cat[ess16sel$ccrdprsn ==7 | ess16sel$ccrdprsn ==8] <- 4
ess16sel$ccrdprsn_cat[ess16sel$ccrdprsn ==9 | ess16sel$ccrdprsn ==10] <- 5
table(ess16sel$ccrdprsn_cat, useNA = "always")
table(ess16sel$ccrdprsn, useNA = "always")
table(ess16sel$edlvenl, useNA = "always") # I want to code 5555 as missing.
ess16sel$edlvenl[ess16sel$edlvenl==5555] <- NA
table(ess16sel$eduyrs, useNA = "always")
table(ess16sel$gndr, useNA = "always")
table(ess16sel$eisced, useNA = "always")
ess16sel$eisced[ess16sel$eisced==55] <- NA
table(ess16sel$lrscale, useNA = "always")
list_na <- colnames(ess16sel)[ apply(ess16sel, 2, anyNA) ]
list_na
average_missing <- apply(ess16sel[,colnames(ess16sel) %in% list_na],
2,
mean,
na.rm =  TRUE)
average_missing
ess16sel$eisced <- as.numeric(ess16sel$eisced)
ess16sel$eisced <- as.numeric(ess16sel$eisced)
ess16sel$edlvenl <- as.numeric(ess16sel$edlvenl)
ess16sel$eduyrs <- as.numeric(ess16sel$eduyrs)
ess16sel$lrscale <- as.numeric(ess16sel$lrscale)
average_missing <- apply(ess16sel[,colnames(ess16sel) %in% list_na],
2,
mean,
na.rm =  TRUE)
average_missing
load("/Users/anuschka/Documents/climatechange/climatechange/ess16sel_mis.Rdata")
load("/Users/anuschka/Documents/climatechange/climatechange/ess20sel_mis.Rdata")
esstotal <- dplyr::bind_rows(ess16sel_replace, ess20sel_replace)
View(esstotal)
mean(esstotal$ccnthum[essround==8])
mean(esstotal$ccnthum[esstotal$essround==8])
attributes(ess_total$ccnthum)
attributes(esstotal$ccnthum)
esstotal$ccnthum <- as.numeric(esstotal$ccnthum)
mean(esstotal$ccnthum[esstotal$essround==8])
mean(esstotal$ccnthum[esstotal$essround=="8"])
esstotal$essround=="8"
save(esstotal, file="/Users/anuschka/Documents/climatechange/climatechange/esstotal.Rdata")
popsel <- pop %>% filter(country_id==19) %>%
select(nr_experts, party, lroverall) %>%
dplyr::rename(party_name = party)
pop <- read_dta("./data/expert_data_stata.dta")
library(tidyverse)
pop <- read_dta("./data/expert_data_stata.dta")
pop <- read.dta("./data/expert_data_stata.dta")
library(haven)
pop <- read_dta("./data/expert_data_stata.dta")
pop <- read_dta("./data/expert_data_stata.dta")
popsel <- pop %>% filter(country_id==19) %>%
select(nr_experts, party, lroverall) %>%
dplyr::rename(party_name = party)
popsel$party_name <- revalue(popsel$party_name, c("50Plus"= "50PLUS"))
#ik ken dit niet, dus doe dit anders.
levels(popsel$party_name)
#ik ken dit niet, dus doe dit anders.
table(popsel$party_name)
#ik ken dit niet, dus doe dit anders.
popsel$party_name[popsel$party_name=="50Plus"] <- "50PLUS"
ches <- read_dta(".data//CHES2019_experts.dta")
ches <- read_dta(".data//CHES2019_experts.dta")
ches <- read_dta(".data//CHES2019_experts.dta")
ches <- read_dta("./data/CHES2019_experts.dta")
View(ches)
dutch <- 1001:1051  #Dutch party ids
ches <- ches[ches$party_id %in% dutch, ]
View(ches)
ches <- ches %>% select(party, party_name, lrgen)
View(ches)
#gok dat het deze is
ches <- read_dta("./data/CHES2019_experts.dta")
dutch <- 1001:1051  #Dutch party ids
ches <- ches[ches$party_id %in% dutch, ]
View(ches)
#gok dat het deze is
ches <- read_dta("./data/CHES2019_experts.dta")
View(ches)
View(popsel)
#gok dat het deze is
ches <- read_dta("./data/CHES2019_experts.dta")
dutch <- 1001:1051  #Dutch party ids
ches <- ches[ches$party_id %in% dutch, ]
ches <- ches %>% select(party, party_name, lrgen)
ches$party_name[ches$party_name=="PVdD"] <- "PvdD"
expert <- rbind(ches, popsel)
names(ches)
names(popsel)
View(ches)
pop <- read_dta("./data/expert_data_stata.dta")
popsel <- pop %>% filter(country_id==19) %>%
select(party, lroverall) %>%
dplyr::rename(party_name = party)
popsel$party_name <- revalue(popsel$party_name, c("50Plus"= "50PLUS"))
names(ches)
#gok dat het deze is
ches <- read_dta("./data/CHES2019_experts.dta")
dutch <- 1001:1051  #Dutch party ids
ches <- ches[ches$party_id %in% dutch, ]
ches <- ches %>% select(party_name, lrgen)
ches$party_name[ches$party_name=="PVdD"] <- "PvdD"
names(ches)
names(popsel)
names(ches) <- names(popsel)
expert <- rbind(ches, popsel)
expert <- na.omit(expert)
save(expert, file = ".data/processed/expert.RData")
save(expert, file = "./data/processed/expert.RData")
means <- expert %>%
group_by(party_name) %>%
summarise_at(vars(lrgen, lroverall), list(mean = mean), na.rm=T)
expert2 <- expert %>%
group_by(party_name) %>%
summarise(lroveral_mean = mean(lroveral))
names(popsel)
expert2 <- expert %>%
group_by(party_name) %>%
summarise(lroveral_mean = mean(lroverall))
View(expert2)
expert2 <- expert %>%
group_by(party_name) %>%
summarise(lroverall_mean = mean(lroverall),
lroverall_sd = sd(lroverall))
View(expert2)
dpes2021sel
#aan dpes2021 hangen
load("./data/dpes2021sel.RData")
View(dpes2021sel)
unique(dpes2021sel$party_name)
dpes2021sel$party_name2 <- as.factor(dpes2021sel$party_name)
unique(dpes2021sel$party_name2)
dpes2021sel$party_name2 <- as.character(dpes2021sel$party_name)
unique(dpes2021sel$party_name2)
unique(expert2$party_name2)
unique(expert2$party_name)
View(expert2)
pop <- read_dta("./data/expert_data_stata.dta")
popsel <- pop %>% filter(country_id==19) %>%
select(party, lroverall) %>%
dplyr::rename(party_name = party)
#popsel$party_name <- revalue(popsel$party_name, c("50Plus"= "50PLUS"))
#ik ken dit niet, dus doe dit anders.
popsel$party_name[popsel$party_name=="50Plus"] <- "50PLUS"
popsel$party_name
#ik heb het onderstaande bestand niet.
ches <- read_dta("/Users/anuschka/Documents/gesis_dir/ches/ches2019.dta")
#gok dat het deze is
ches <- read_dta("./data/CHES2019_experts.dta")
dutch <- 1001:1051  #Dutch party ids
ches <- ches[ches$party_id %in% dutch, ]
ches <- ches %>% select(party_name, lrgen)
ches$party_name[ches$party_name=="PVdD"] <- "PvdD"
ches$party_name
names(ches) <- names(popsel) #namen gelijk maken
expert <- rbind(ches, popsel)
expert <- na.omit(expert)
expert
View(expert)
save(expert, file = "./data/processed/expert.RData")
#means en sd per partij
expert2 <- expert %>%
group_by(party_name) %>%
summarise(lroverall_mean = mean(lroverall),
lroverall_sd = sd(lroverall))
expert2
#aan dpes2021 hangen
load("./data/dpes2021sel.RData")
unique(dpes2021sel$party_name)
dpes2021sel$party_name2 <- as.character(dpes2021sel$party_name)
unique(dpes2021sel$party_name2)
unique(expert2$party_name)
?left_join
#aan dpes2021 hangen
load("./data/dpes2021sel.RData")
unique(dpes2021sel$party_name)
dpes2021sel$party_name <- as.character(dpes2021sel$party_name)
unique(dpes2021sel$party_name)
dpes2021sel %>%
left_join(expert2, by="party_name") -> dpes2021seltest
View(dpes2021seltest)
load("./data/dpes2021sel.RData")
# I want to have a regression where both the intercept and the variance are also stored in some list/df.
getwd()
load("../data/dpes2021sel.RData")
load(".../data/dpes2021sel.RData")
load("./././data/dpes2021sel.RData")
install.packages("here")
library(here)
load("./data/dpes2021sel.RData")
load("data/dpes2021sel.RData")
load("/data/dpes2021sel.RData")
load("./data/dpes2021sel.RData")
here()
load("./data/dpes2021sel.RData")
here::i_am("scripts/analysis/single_regression.Rmd")
load("./data/dpes2021sel.RData")
load("data/dpes2021sel.RData")
load("C:/GitHub/climatechange/data/dpes2021sel.RData")
load("/data/dpes2021sel.RData")
load("dpes2021sel.RData")
load("C:/GitHub/climatechange/data/dpes2021sel.RData")
load("/data/dpes2021sel.RData")
load("./data/dpes2021sel.RData")
load("data/dpes2021sel.RData")
here()
here("data/dpes2021sel.RData")
load("data/dpes2021sel.RData")
load(here("data", "dpes2021sel.RData"))
View(dpes2021sel)
fit_list <- list()
for (i in c("cchange_prob", "cc_measures", "cc_cause")) {
fit[[i]] <- lm(as.formula(paste(dependent_variable, "~", paste(predictors, collapse = " + "))), data = dpes2021sel)
}
predictors <- c("sex", "urban", "educ_cat", "lroverall_mean")
for (i in c("cchange_prob", "cc_measures", "cc_cause")) {
fit[[i]] <- lm(as.formula(paste(i, "~", paste(predictors, collapse = " + "))), data = dpes2021sel)
}
for (i in c("cchange_prob", "cc_measures", "cc_cause")) {
fit_list[[i]] <- lm(as.formula(paste(i, "~", paste(predictors, collapse = " + "))), data = dpes2021sel)
}
load(here("data", "issptotal.RData"))
split_issp <- split(issptotal, issptotal$surveyyear)
View(split_issp)
# Define the predictor variables
predictors <- c("sex", "eduyrs")
fitissp_list <- list()
split_issp <- split(issptotal, issptotal$surveyyear)
# Define the predictor variables
predictors <- c("sex", "eduyrs")
fitissp_list <- list()
# Loop through each survey year
for (i in 1:length(split_issp)) {
# Loop through each dependent variable
for (j in c("worry","lifeharm")) {
# Perform the linear regression
fitissp_list[[i]][[j]] <- lm(as.formula(paste(j, "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
}
}
i
length(split_issp)
split_issp[[i]]
i=1
j=1
lm(as.formula(paste(j, "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
paste(predictors, collapse = " + ")
paste(j, "~", paste(predictors, collapse = " + "))
j = "worry"
paste(j, "~", paste(predictors, collapse = " + "))
lm(as.formula(paste(j, "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
fitissp_list <- list()
# Loop through each survey year
for (i in 1:length(split_issp)) {
# Loop through each dependent variable
for (j in c("worry","lifeharm")) {
# Perform the linear regression
fitissp_list[[i]][[j]] <- lm(as.formula(paste(j, "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
}
}
deps <- c("worry","lifeharm")
deps <- c("worry","lifeharm")
fitissp_list <- list()
# Loop through each survey year
for (i in 1:length(split_issp)) {
# Loop through each dependent variable
for (j in 1:length(deps)) {
# Perform the linear regression
fitissp_list[[i]][[j]] <- lm(as.formula(paste(deps[j], "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
}
}
i
j
fitissp_list[[i]][[j]]
fitissp_list <- list()
# Loop through each survey year
for (i in 1:length(split_issp)) {
tmp <- list()
# Loop through each dependent variable
for (j in 1:length(deps)) {
# Perform the linear regression
tmp[[j]] <- lm(as.formula(paste(deps[j], "~", paste(predictors, collapse = " + "))), data = split_issp[[i]])
}
fitissp_list[[i]] <- tmp
}
View(fitissp_list)
install.packages('here')
load(here("./data/final_data", "issptotal.RData"))
library(dplyr)
library(here)
library(ggplot2)
library(tidyverse)
library(metafor)
here()
here::i_am("blog.Rmd")
load(here("./data/final_data", "issptotal.RData"))
knitr::opts_chunk$set(number_sections = FALSE)
#knitr::opts_chunk$set(eval = FALSE)
options(width = 100)
colorize <- function(x, color) {sprintf("<span style='color: %s;'>%s</span>", color, x) }
library(dplyr)
library(here)
library(ggplot2)
library(tidyverse)
library(metafor)
here()
here::i_am("blog.Rmd")
load(here("./data/final_data", "issptotal.RData"))
plot_data <- select(issptotal, worry, surveyyear)
mean_plot <- plot_data %>%
group_by(surveyyear) %>%
summarise(mean_worry = mean(worry, na.rm=T),
sd_worry = sd(worry, na.rm=T))
mean_plot$surveyyear[is.na(mean_plot$surveyyear)] <- 2010
meanplot <- ggplot(data = mean_plot, aes(x = surveyyear, y = mean_worry)) +
geom_line(linewidth = 1, color = "#29832D") +
geom_errorbar(aes(ymin = mean_worry - sd_worry, ymax = mean_worry + sd_worry),
width = 0.2, color = "#29832D") +
geom_point(data = mean_plot, aes(x = surveyyear, y = mean_worry)) +
ylim(1,5) +
xlim(1992, 2011) +
labs(title = "Klimaatzorgen per jaar, ISSP 1993-2000",
x = "Jaar",
y = "Mate van klimaatzorgen") +
scale_x_continuous(breaks = c(1993, 2000, 2010))+
theme_classic() +
theme(text = element_text(family = "Times New Roman"))
meanplot
#ggsave("blogplot.png", width = 7, height = 5, path = "/Users/anuschka/Documents/climatechange/climatechange/output/blogplot.png")
load(here("./data/meta_analysis", "total_reg_results_gam_w_new.RData"))
# Step 1. Estimate the empty model without moderators to make the forest plots.
model_step_1_att <- rma(yi = mu_time,
sei = mu_time_sd,
data = total_reg_results,
method = "REML",
test = "knha")
# I want to assign different colors to the different types of dependent variables, so that one can easily distinguish
# the types of attitudes by colors in the forest plot
total_reg_results$colour <- NA
total_reg_results$colour[total_reg_results$attitude_cat=="cognitive"] <- "#2980B9" # blue
total_reg_results$colour[total_reg_results$attitude_cat=="affective"] <- "#CC5279" # pink
total_reg_results$colour[total_reg_results$attitude_cat=="behavioral"] <- "#B0CC52" # green
colour.palette <- as.vector(total_reg_results$colour)
# Repeat step 1, but then for the polarization (variance)
model_step_1_var <- rma(yi = sig_time,
sei = sig_time_sd,
data = total_reg_results,
method = "REML",
test = "knha")
model_step_1_var
affective <- subset(total_reg_results, attitude_cat == "affective")
aff_model_var <- rma(yi = sig_time,
sei = sig_time_sd,
data = affective,
method = "REML",
test = "knha")
behavioral <- subset(total_reg_results, attitude_cat == "behavioral")
beh_model_var <- rma(yi = sig_time,
sei = sig_time_sd,
data = behavioral,
method = "REML",
test = "knha")
cognitive <- subset(total_reg_results, attitude_cat == "cognitive")
cog_model_var <- rma(yi = sig_time,
sei = sig_time_sd,
data = cognitive,
method = "REML",
test = "knha")
{png <- forest(model_step_1_var, annotate =  TRUE, header = "Polarisatie in houdingen ten aanzien van klimaat", pch = 23, fonts = "Times", ylim = c(-6, 0), cex = 1, addfit = FALSE, width = 5)
addpoly.rma(model_step_1_var, row = -6, mlab = "Totaal", col = "#ACBFD6")
addpoly.rma(aff_model_var, row = -3, mlab = "Affectief", col = "#CC5279")
addpoly.rma(beh_model_var, row = -4, mlab = "Gedragsmatig", col = "#B0CC52")
addpoly.rma(cog_model_var, row = -5, mlab = "Cognitief", col = "#2980B9")
}
forest(model_step_1_var, annotate =  TRUE, header = "Polarisatie in houdingen ten aanzien van klimaat", pch = 23, fonts = "Times", ylim = c(-6, 0), cex = 1, addfit = FALSE, width = 5)
metafor::forest(model_step_1_var, annotate =  TRUE, header = "Polarisatie in houdingen ten aanzien van klimaat", pch = 23, fonts = "Times", ylim = c(-6, 0), cex = 1, addfit = FALSE, width = 5)
?forest
metafor::forest(model_step_1_var)
model_step_1_var
class(model_step_1_var)
install.packages("forest")
install.packages("metafor")
install.packages("metafor")
library(metafor)
metafor::forest(model_step_1_var)
